name: dockercompose1244400172296992098
services:
  db:
    environment:
      MYSQL_DATABASE: enterprisestore
      MYSQL_ROOT_PASSWORD: enterpriseDB123
    image: mysql
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3306
      published: "3306"
      protocol: tcp
    volumes:
    - type: volume
      source: db-data
      target: /var/lib/mysql
      volume: {}
  enterprisestore.mvc:
    build:
      context: E:\Arquivos\IF\9º Semestre\Tópicos Especiais\EnterpriseStore-main\src\EnterpriseStore.MVC
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: EnterpriseStore.MVC
      target: base
    container_name: EnterpriseStore.MVC
    depends_on:
      db:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      ConnectionStrings__DefaultConnection: Server=db;User=root;Password=enterpriseDB123;Database=enterprisestore
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: enterprisestoremvc:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/EnterpriseStore.MVC.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "5017"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: E:\Arquivos\IF\9º Semestre\Tópicos Especiais\EnterpriseStore-main\src\EnterpriseStore.MVC
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Helyon\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Helyon\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Helyon\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Helyon\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: E:\Arquivos\IF\9º Semestre\Tópicos Especiais\EnterpriseStore-main\src\EnterpriseStore.MVC
      target: /src
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose1244400172296992098_default
volumes:
  db-data:
    name: dockercompose1244400172296992098_db-data